{"project": "asv_tester", "project_url": "http://project-homepage.org/", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"0": "a80226567bdb35d79ac5106537224fcbf23a01da", "2": "85e6eadb6f97b86eb203d3469126912a4ac0f4ba", "5": "5edbce64b90de796bb841be13db10e7bde2973d7", "6": "b96db1664fb889926b703ab79ea0cf3c164fa028", "8": "6f950b3fb1b74d22df3b6cc615dd3e4d44c3eff6", "9": "be1763a7cfd0dda44db8e000a4ebfaf60f7e3eed", "10": "2ce421ba9c31ce95eaa67c6327326fe8c17a77cd", "11": "7614c2da1507e4389fec208ba070294d500f5438", "12": "57523f3b1240fb7c4e67539e035663a86ed43198", "13": "e1eb7ed4df491ea25efa86c9000e14ac3a60c0b5", "14": "c2a931486eebad7dea97a80e6ea50fffdd4990be", "15": "a4a96a192b76580960306bbdfd86ad2d1bfe8893", "16": "c5cb84479720b932181f3cc6c381c3ec9050c0dd", "17": "40307b16728ac930e88e80b889d17cf0cab6af0c", "32": "7951fb2d7238878fc72691061bef51ca61a5a4c9", "39": "932a1dd17070c261dfda6ec526b03801a51b7edb", "40": "68f9dfdb86c562079625b442d596153839057867", "41": "103e28b19eb469246b46eb652e49a169a05cf15b", "48": "c491d18df11208bd7edd7408709a531fa030a261", "55": "126272ca8519aaa92d6be0269fe2d7d5c2c8a639", "56": "5db025a8f0f33abdd888bfe04837848a849c15a4", "57": "02dd27441a1e0fd96a85b59d96f8d12b7857cb35", "60": "08abe91379103c43dd9df26234b2e8d90bbacc10", "61": "67172e552b337f47caf5052c3a235c1f6440a397", "62": "8c0dcf3d0cdbd887888aa568a4b511d17c6c0cab", "70": "453e419e9926e4f7a635e81561dd0165a050d1a1", "71": "a703aea2ca57acfe43b345b16a2a24597140253b", "98": "f237b561b840c79cc0f5ed2c63f5e54bfa682622", "101": "8b13e98fbbff301735032edff6d6c3f615fccdd1", "105": "5714f9eb16736e0738acd5deec752dffa75a2487", "116": "7d693ddf9d13cdd0da873ad74bdcba5ea6264326", "118": "6f277dadab1da084b67017c274a4774c01104c50", "119": "586ec9e9df1b911ebc814cbccaea2a9f420dab71", "120": "39e671d1c8d1eb049212d69d960d46f1bfe621f8", "121": "dfd5c3411c55a6ce567cbc3f8cf6c7bb90a39aa8", "128": "d7b0f931a99fa67a69db9ecb7559ac9b997af6c0", "136": "e0ee203c70b703e0054adf43423ef10ae1bf49a5"}, "revision_to_date": {"0": 1689260648000, "2": 1689867293000, "5": 1689974155000, "6": 1689979181000, "8": 1690225621000, "9": 1690225886000, "10": 1690226517000, "11": 1690226770000, "12": 1690226920000, "13": 1690228906000, "14": 1690229444000, "15": 1690230415000, "16": 1690230722000, "17": 1690231513000, "32": 1690235976000, "39": 1690316223000, "40": 1690316370000, "41": 1690316461000, "48": 1690395918000, "55": 1690406479000, "56": 1690407407000, "57": 1690411157000, "60": 1690413393000, "61": 1690416528000, "62": 1690418487000, "70": 1690478070000, "71": 1690478190000, "98": 1690823741000, "101": 1690825805000, "105": 1690828222000, "116": 1690831461000, "118": 1690832020000, "119": 1690832316000, "120": 1690832359000, "121": 1690832440000, "128": 1690923896000, "136": 1690991162000}, "params": {"arch": ["AMD64"], "cpu": ["12th Gen Intel(R) Core(TM) i7-1260P"], "machine": ["Kevin"], "num_cpu": ["16"], "os": ["Windows 10"], "ram": ["16GB"], "python": ["2.7", "2.9", "3.11", "3.6", "3.9"], "branch": ["main"]}, "graph_param_list": [{"arch": "AMD64", "cpu": "12th Gen Intel(R) Core(TM) i7-1260P", "machine": "Kevin", "num_cpu": "16", "os": "Windows 10", "ram": "16GB", "python": "3.9", "branch": "main"}, {"arch": "AMD64", "cpu": "12th Gen Intel(R) Core(TM) i7-1260P", "machine": "Kevin", "num_cpu": "16", "os": "Windows 10", "ram": "16GB", "python": "3.6", "branch": "main"}, {"arch": "AMD64", "cpu": "12th Gen Intel(R) Core(TM) i7-1260P", "machine": "Kevin", "num_cpu": "16", "os": "Windows 10", "ram": "16GB", "python": "2.7", "branch": "main"}, {"arch": "AMD64", "cpu": "12th Gen Intel(R) Core(TM) i7-1260P", "machine": "Kevin", "num_cpu": "16", "os": "Windows 10", "ram": "16GB", "python": "3.11", "branch": "main"}, {"arch": "AMD64", "cpu": "12th Gen Intel(R) Core(TM) i7-1260P", "machine": "Kevin", "num_cpu": "16", "os": "Windows 10", "ram": "16GB", "python": "2.9", "branch": "main"}], "benchmarks": {"benchmarks.MemSuite.mem_list": {"code": "class MemSuite:\n    def mem_list(self):\n        return [0] * 256", "name": "benchmarks.MemSuite.mem_list", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "abe86bab484550a681c61d7bb6eb081fbd37eb6d5009eba1df85c935530577b9"}, "benchmarks.TimeSuite.time_has_scq": {"code": "class TimeSuite:\n        def time_has_scq(self):\n    #       tmon = scq.Transmon.create()\n            bar.hello()\n\n    def setup(self):\n        self.d = {}\n        for x in range(500):\n            self.d[x] = None", "min_run_count": 2, "name": "benchmarks.TimeSuite.time_has_scq", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d4059afa04caa57bdefa06bab4947d0d01d64bb492ca3a9fb43c4a2480be92ff", "warmup_time": -1}, "benchmarks.TimeSuite.time_keys": {"code": "class TimeSuite:\n    def time_keys(self):\n        for key in self.d.keys():\n            pass\n\n    def setup(self):\n        self.d = {}\n        for x in range(500):\n            self.d[x] = None", "min_run_count": 2, "name": "benchmarks.TimeSuite.time_keys", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "86e015a3c40c52da31e4185fff7c7176c38c5e1e1e4aba71912db0b388225191", "warmup_time": -1}, "benchmarks.TimeSuite.time_range": {"code": "class TimeSuite:\n    def time_range(self):\n        d = self.d\n        for key in range(500):\n            x = d[key]\n\n    def setup(self):\n        self.d = {}\n        for x in range(500):\n            self.d[x] = None", "min_run_count": 2, "name": "benchmarks.TimeSuite.time_range", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cc3e85248a6284df968bcf8afe866da285261eb2487c10e9dd9e2d17a05deb47", "warmup_time": -1}, "benchmarks.TimeSuite.time_slow_function": {"code": "class TimeSuite:\n    def time_slow_function(self):\n        bar.slow_function()\n\n    def setup(self):\n        self.d = {}\n        for x in range(500):\n            self.d[x] = None", "min_run_count": 2, "name": "benchmarks.TimeSuite.time_slow_function", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a6252c9b81517f3d859e66d5c170446a9888bea51578ab12993fe6e36726f1f8", "warmup_time": -1}, "benchmarks.TimeSuite.time_values": {"code": "class TimeSuite:\n    def time_values(self):\n        for value in self.d.values():\n            pass\n\n    def setup(self):\n        self.d = {}\n        for x in range(500):\n            self.d[x] = None", "min_run_count": 2, "name": "benchmarks.TimeSuite.time_values", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cace9f2d006aa364dcf5762823afba3680c2fb50179ee30beaf880c0697256e2", "warmup_time": -1}}, "machines": {"Kevin": {"arch": "AMD64", "cpu": "12th Gen Intel(R) Core(TM) i7-1260P", "machine": "Kevin", "num_cpu": "16", "os": "Windows 10", "ram": "16GB", "version": 1}}, "tags": {}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}